name: Apply the resources
description: Run the `apply` command of percli to deploy Perses resources to the API server
inputs:
  url:
    description: The URL of the Perses API server where to deploy the dashboard preview.
    required: true
  directory:
    description: Path to the directory containing the resources consumed by the command (mutually exclusive with `file`).
    required: false
  file:
    description: Path to the file that contains the resources consumed by the command (mutually exclusive with `directory`).
    required: false
  username:
    description: Username for basic authentication to the API server.
    required: false
  password:
    description: Password for basic authentication to the API server.
    required: false
  token:
    description: Bearer token for authentication to the API server.
    required: false
  provider:
    description: External authentication provider identifier. (slug_id)
    required: false
  client-id:
    description: Client ID used for robotic access when using external authentication provider.
    required: false
  client-secret:
    description: Client Secret used for robotic access when using external authentication provider.
    required: false
  insecure-skip-tls-verify:
    description: If true the server's certificate will not be checked for validity. This will make your HTTPS connections insecure.
    required: false
  project:
    description: If present, the project scope for this CLI request.
    required: false
  force:
    description: If present, the command will create the resource even if the projects are not consistent between the --project flag and the dashboard metadata (the latter has priority).
    required: false
runs:
  using: composite
  steps:
    - name: Login to the Perses API
      uses: ./actions/login
      with:
        url: ${{ inputs.url }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
        token: ${{ inputs.token }}
        provider: ${{ inputs.provider }}
        client-id: ${{ inputs.client-id }}
        client-secret: ${{ inputs.client-secret }}
        insecure-skip-tls-verify: ${{ inputs.insecure-skip-tls-verify }}

    - name: Run the `apply` command
      run: |
        percli apply \
          $([[ -n "${{ inputs.directory }}" ]] && echo "-d ${{ inputs.directory }}") \
          $([[ -n "${{ inputs.file }}" ]] && echo "-f ${{ inputs.file }}") \
          $([[ -n "${{ inputs.project }}" ]] && echo "--project ${{ inputs.project }}") \
          $([[ "${{ inputs.force }}" == "true" ]] && echo "--force")
      shell: bash
